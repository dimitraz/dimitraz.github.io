{"version":3,"sources":["webpack:///./src/pages/photos.js"],"names":["Grid","styled","div","Container","section","SansSerifStack","Description","List","ul","ListItem","li","ListItemLink","Link","Heading","h1","Date","small","Photos","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","updateTheme","useThemeContext","length","map","post","frontmatter","fields","slug","thumbnail","childImageSharp","fixed","src","key","date","to","itemProp","onMouseLeave","onClick","onMouseEnter","pageQuery"],"mappings":"6FAAA,sIAQMA,EAAOC,IAAOC,IAAV,kEAAGD,CAAH,oEAMJE,EAAYF,IAAOG,QAAV,uEAAGH,CAAH,4BACXI,KAKEC,EAAcL,YAAOE,GAAV,yEAAGF,CAAH,wCAKXM,EAAON,IAAOO,GAAV,kEAAGP,CAAH,yCAMJQ,EAAWR,IAAOS,GAAV,sEAAGT,CAAH,iCAKRU,EAAeV,YAAOW,QAAV,0EAAGX,CAAH,2BAIZY,EAAUZ,IAAOa,GAAV,qEAAGb,CAAH,4BACTI,KAKEU,EAAOd,IAAOe,MAAV,kEAAGf,CAAH,4BAiEKgB,UA7DA,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAC7BC,EAAgBC,cAAhBD,YAER,OAAqB,IAAjBH,EAAMK,OAEN,kBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAACvB,EAAD,KACE,kBAACG,EAAD,MACA,kBAACA,EAAD,mCAON,kBAAC,IAAD,CAAQgB,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cAEX,kBAACvB,EAAD,KACE,kBAACG,EAAD,MAEA,kBAACG,EAAD,wHAMF,kBAACC,EAAD,KACGiB,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAC9CC,EAAYJ,EAAKC,YAAYG,UAAUC,gBAAgBC,MAAMC,IAEnE,OACE,kBAAC7B,EAAD,CAAU8B,IAAKR,EAAKE,OAAOC,MACzB,kBAAClC,EAAD,KACE,kBAACe,EAAD,KAAOgB,EAAKC,YAAYQ,MACxB,kBAACrC,EAAD,KACE,kBAACU,EAAD,KACE,kBAACF,EAAD,CACE8B,GAAIV,EAAKE,OAAOC,KAChBQ,SAAS,MACTC,aAAc,kBAAMhB,KACpBiB,QAAS,kBAAMjB,KACfkB,aAAc,kBAAMlB,EAAYQ,EAAW,WAE1CZ,aAehB,IAAMuB,EAAS","file":"component---src-pages-photos-js-4ed7d4529421e5ca74bc.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { useThemeContext } from \"../context/helpers\"\nimport { SansSerifStack } from \"../components/layout\"\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 10% 75%;\n  align-items: center;\n`\n\nconst Container = styled.section`\n  ${SansSerifStack}\n  padding: 0;\n  margin: 0;\n`\n\nconst Description = styled(Container)`\n  margin-bottom: 4em;\n  line-height: 1.5;\n`\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`\n\nconst ListItem = styled.li`\n  padding: 0 0 3em 0;\n  margin: 0;\n`\n\nconst ListItemLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst Heading = styled.h1`\n  ${SansSerifStack};\n  padding: 0;\n  margin: 0;\n`\n\nconst Date = styled.small`\n  font-family: monospace;\n`\n\nconst Photos = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { updateTheme } = useThemeContext()\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Grid>\n          <Container></Container>\n          <Container>No blog posts to display</Container>\n        </Grid>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n\n      <Grid>\n        <Container></Container>\n\n        <Description>\n          Sometimes I take photos.. This is a photo diary of film pictures taken\n          on some of my various analogue cameras.\n        </Description>\n      </Grid>\n\n      <List>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const thumbnail = post.frontmatter.thumbnail.childImageSharp.fixed.src\n\n          return (\n            <ListItem key={post.fields.slug}>\n              <Grid>\n                <Date>{post.frontmatter.date}</Date>\n                <Container>\n                  <Heading>\n                    <ListItemLink\n                      to={post.fields.slug}\n                      itemProp=\"url\"\n                      onMouseLeave={() => updateTheme()}\n                      onClick={() => updateTheme()}\n                      onMouseEnter={() => updateTheme(thumbnail, \"white\")}\n                    >\n                      {title}\n                    </ListItemLink>\n                  </Heading>\n                </Container>\n              </Grid>\n            </ListItem>\n          )\n        })}\n      </List>\n    </Layout>\n  )\n}\n\nexport default Photos\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"photo\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD MMM YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fixed(width: 600) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}